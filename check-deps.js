const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üîç Verificando dependencias y configuraci√≥n del proyecto...');

// Verificar archivos esenciales
const essentialFiles = [
  'index.html',
  'src/main.jsx',
  'src/App.jsx'
];

for (const file of essentialFiles) {
  const filePath = path.join(__dirname, file);
  if (!fs.existsSync(filePath)) {
    console.error(`‚ùå No se encontr√≥ el archivo esencial: ${file}`);
  } else {
    console.log(`‚úÖ Archivo encontrado: ${file}`);
  }
}

// Verificar package.json y dependencias
const packageJsonPath = path.join(__dirname, 'package.json');
if (!fs.existsSync(packageJsonPath)) {
  console.error('‚ùå No se encontr√≥ el archivo package.json');
} else {
  console.log('‚úÖ Archivo package.json encontrado');
  
  try {
    const packageJson = require(packageJsonPath);
    console.log('üì¶ Dependencias requeridas:');
    
    const requiredDeps = ['react', 'react-dom', 'react-icons'];
    for (const dep of requiredDeps) {
      if (packageJson.dependencies && packageJson.dependencies[dep]) {
        console.log(`‚úÖ ${dep}: ${packageJson.dependencies[dep]}`);
      } else {
        console.log(`‚ùå Falta ${dep}`);
      }
    }
  } catch (err) {
    console.error('‚ùå Error al leer package.json:', err.message);
  }
}

// Verificar node_modules
const nodeModulesPath = path.join(__dirname, 'node_modules');
if (!fs.existsSync(nodeModulesPath)) {
  console.error('‚ùå No se encontr√≥ la carpeta node_modules. Ejecute npm install');
} else {
  console.log('‚úÖ Carpeta node_modules encontrada');
}

console.log('\nüîß Soluci√≥n recomendada si hay problemas:');
console.log('1. Elimine la carpeta node_modules y package-lock.json');
console.log('2. Ejecute: npm install');
console.log('3. Ejecute: npm run dev');

console.log('\nüîç Verificaci√≥n completada');
